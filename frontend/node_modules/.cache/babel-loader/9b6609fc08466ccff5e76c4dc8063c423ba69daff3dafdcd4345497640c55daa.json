{"ast":null,"code":"var _jsxFileName = \"/home/cavlovic/Desktop/Code/raptorv2/frontend/src/containers/ToggleSwitches.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleSwitches = () => {\n  _s();\n  const [toggles, setToggles] = useState([{\n    id: 1,\n    text: \"Life Raft\",\n    location: \"Life_Raft.png\",\n    isChecked: false\n  }, {\n    id: 2,\n    text: \"Life Jacket\",\n    location: \"Life_Jacket.png\",\n    isChecked: false\n  }, {\n    id: 3,\n    text: \"Life Ring\",\n    location: \"Life_Ring.png\",\n    isChecked: false\n  }]);\n  const handleToggle = id => {\n    setToggles(prevToggles => {\n      // Update the state by toggling the appropriate switch\n      const updatedToggles = prevToggles.map(toggle => toggle.id === id ? {\n        ...toggle,\n        isChecked: !toggle.isChecked\n      } : toggle);\n\n      // Construct the object expected by FastAPI\n      const switchState = {\n        switch1: updatedToggles[0].isChecked,\n        switch2: updatedToggles[1].isChecked,\n        switch3: updatedToggles[2].isChecked\n      };\n\n      // Send the updated switch state to the FastAPI backend\n      axios.post(\"http://192.168.1.23:8000/switches\", switchState).then(response => console.log(\"Toggle state updated:\", response.data)).catch(error => console.error(\"Error updating toggles:\", error));\n      return updatedToggles;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ToggleSwitches\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"toggleheader\",\n      children: \"\\u2002\\u2002\\u2002Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), toggles.map(toggle => /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n      text: toggle.text,\n      isChecked: toggle.isChecked,\n      onToggle: () => handleToggle(toggle.id),\n      location: toggle.location\n    }, toggle.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleSwitches, \"aFd4l7PGbd3BAPrRgYWb4FDLSsc=\");\n_c = ToggleSwitches;\nconst ToggleSwitch = ({\n  text,\n  isChecked,\n  onToggle,\n  location\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"switch_child\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"togglelabel\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isChecked,\n        onChange: onToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: location,\n      className: \"toggleimages\",\n      onClick: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ToggleSwitch;\nexport default ToggleSwitches;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleSwitches\");\n$RefreshReg$(_c2, \"ToggleSwitch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ToggleSwitches","_s","toggles","setToggles","id","text","location","isChecked","handleToggle","prevToggles","updatedToggles","map","toggle","switchState","switch1","switch2","switch3","post","then","response","console","log","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ToggleSwitch","onToggle","_c","type","checked","onChange","src","onClick","_c2","$RefreshReg$"],"sources":["/home/cavlovic/Desktop/Code/raptorv2/frontend/src/containers/ToggleSwitches.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst ToggleSwitches = () => {\n  const [toggles, setToggles] = useState([\n    {\n      id: 1,\n      text: \"Life Raft\",\n      location: \"Life_Raft.png\",\n      isChecked: false,\n    },\n    {\n      id: 2,\n      text: \"Life Jacket\",\n      location: \"Life_Jacket.png\",\n      isChecked: false,\n    },\n    {\n      id: 3,\n      text: \"Life Ring\",\n      location: \"Life_Ring.png\",\n      isChecked: false,\n    },\n  ]);\n\n  const handleToggle = (id) => {\n    setToggles((prevToggles) => {\n      // Update the state by toggling the appropriate switch\n      const updatedToggles = prevToggles.map((toggle) =>\n        toggle.id === id ? { ...toggle, isChecked: !toggle.isChecked } : toggle\n      );\n\n      // Construct the object expected by FastAPI\n      const switchState = {\n        switch1: updatedToggles[0].isChecked,\n        switch2: updatedToggles[1].isChecked,\n        switch3: updatedToggles[2].isChecked,\n      };\n\n      // Send the updated switch state to the FastAPI backend\n      axios\n        .post(\"http://192.168.1.23:8000/switches\", switchState)\n        .then((response) => console.log(\"Toggle state updated:\", response.data))\n        .catch((error) => console.error(\"Error updating toggles:\", error));\n\n      return updatedToggles;\n    });\n  };\n\n  return (\n    <div className=\"ToggleSwitches\">\n      <h1 className=\"toggleheader\">&ensp;&ensp;&ensp;Items</h1>\n      {toggles.map((toggle) => (\n        <ToggleSwitch\n          key={toggle.id}\n          text={toggle.text}\n          isChecked={toggle.isChecked}\n          onToggle={() => handleToggle(toggle.id)}\n          location={toggle.location}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst ToggleSwitch = ({ text, isChecked, onToggle, location }) => {\n  return (\n    <div className=\"switch_child\">\n      <h2 className=\"togglelabel\">{text}</h2>\n      <label className=\"switch\">\n        <input type=\"checkbox\" checked={isChecked} onChange={onToggle} />\n        <span className=\"slider round\" />\n      </label>\n      <img src={location} className=\"toggleimages\" onClick={onToggle} />\n    </div>\n  );\n};\n\nexport default ToggleSwitches;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}